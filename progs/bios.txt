# C- Compilation for intermediate code

***************************************

1: (function, main, _, _)
2: (param list, 1, _, _)
3: (set param, 10, _, _)
4: (call, lcd, 1, T1)
5: (param list, 0, _, _)
6: (call, input, 0, T2)
7: (assign, check_health, T2, _)
8: (addition, check_health, 2, T3)
9: (assign, check_health, T3, _)
10: (param list, 1, _, _)
11: (set param, check_health, _, _)
12: (call, output, 1, T4)
13: (assign, index, 0, _)
14: (label, L1, _, _)
15: (not equal, index, 1024, T5)
16: (jump if false, T5, L2, _)
17: (param list, 1, _, _)
18: (set param, index, _, _)
19: (call, lhd, 1, T6)
20: (assign, instruction, T6, _)
21: (param list, 2, _, _)
22: (set param, instruction, _, _)
23: (set param, index, _, _)
24: (call, smem, 2, T7)
25: (addition, index, 1, T8)
26: (assign, index, T8, _)
27: (goto, L1, _, _)
28: (label, L2, _, _)
29: (param list, 1, _, _)
30: (set param, 11, _, _)
31: (call, lcd, 1, T9)
32: (param list, 0, _, _)
33: (call, input, 0, T10)
34: (assign, BASH_STOP, T10, _)

////////////Codigo Objeto////////////

main:
    0:	addi	$sp, $sp, 5
        1:	li	$a0, 10
        2:	lcd	$a0
        3:	nop	
        4:	in	$t0
        5:	sw	$t0, 0($sp)
        6:	lw	$s0, 0($sp)
        7:	addi	$t1, $s0, 2
        8:	sw	$t1, 0($sp)
        9:	lw	$s0, 0($sp)
        10:	mov	$a0, $s0
        11:	out	$a0
        12:	li	$t2, 0
        13:	sw	$t2, -3($sp)
    .L1	
    14:	lw	$s0, -3($sp)
        15:	li	$t3, 1024
        16:	neq	$t4, $s0, $t3
        17:	beq	$t4, $rzero, L2
        18:	mov	$a0, $s0
        19:	lhd	$t5, $a0
        20:	sw	$t5, -2($sp)
        21:	lw	$s1, -2($sp)
        22:	mov	$a0, $s1
        23:	mov	$a1, $s0
        24:	smem	$a0, $a1
        25:	addi	$t6, $s0, 1
        26:	sw	$t6, -3($sp)
        27:	lw	$s0, -3($sp)
        28:	j	L1
    .L2	
    29:	li	$a0, 11
        30:	lcd	$a0
        31:	nop	
        32:	in	$t7
        33:	sw	$t7, -1($sp)
        34:	subi	$sp, $sp, 5
        35:	hlt	
    