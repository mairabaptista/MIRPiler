# C- Compilation for intermediate code

***************************************

1: (function, main, _, _)
2: (assign, index, 0, _)
3: (label, L1, _, _)
4: (not equal, index, 1024, T1)
5: (jump if false, T1, L2, _)
6: (param list, 1, _, _)
7: (set param, index, _, _)
8: (call, lhd, 1, T2)
9: (assign, instruction, T2, _)
10: (param list, 2, _, _)
11: (set param, instruction, _, _)
12: (set param, index, _, _)
13: (call, smem, 2, T3)
14: (addition, index, 1, T4)
15: (assign, index, T4, _)
16: (goto, L1, _, _)
17: (label, L2, _, _)
18: (param list, 1, _, _)
19: (set param, 8, _, _)
20: (call, lcd, 1, T5)
21: (param list, 1, _, _)
22: (set param, index, _, _)
23: (call, output, 1, T6)
24: (param list, 1, _, _)
25: (set param, 99, _, _)
26: (call, output, 1, T7)

////////////Codigo Objeto////////////

main:
    0:	addi	$sp, $sp, 3
        1:	li	$t0, 0
        2:	sw	$t0, -1($sp)
    .L1	
    3:	lw	$s0, -1($sp)
        4:	li	$t1, 1024
        5:	neq	$t2, $s0, $t1
        6:	beq	$t2, $rzero, L2
        7:	mov	$a0, $s0
        8:	lhd	$t3, $a0
        9:	sw	$t3, 0($sp)
        10:	lw	$s1, 0($sp)
        11:	mov	$a0, $s1
        12:	mov	$a1, $s0
        13:	smem	$a0, $a1
        14:	addi	$t4, $s0, 1
        15:	sw	$t4, -1($sp)
        16:	lw	$s0, -1($sp)
        17:	j	L1
    .L2	
    18:	li	$a0, 8
        19:	lcd	$a0
        20:	lw	$s0, -1($sp)
        21:	mov	$a0, $s0
        22:	nop	
        23:	out	$a0
        24:	li	$a0, 99
        25:	nop	
        26:	out	$a0
        27:	subi	$sp, $sp, 3
        28:	hlt	
    