# C- Compilation for intermediate code

***************************************

1: (function, gcd, _, _)
2: (get param, u, _, _)
3: (get param, v, _, _)
4: (equal, v, 0, T1)
5: (jump if false, T1, L1, _)
6: (return, u, _, _)
7: (goto, L2, _, _)
8: (label, L1, _, _)
9: (param list, 2, _, _)
10: (set param, v, _, _)
11: (division, u, v, T2)
12: (multiplication, T2, v, T3)
13: (subtraction, u, T3, T4)
14: (set param, T4, _, _)
15: (call, gcd, 2, T5)
16: (return, T5, _, _)
17: (label, L2, _, _)
18: (return, _, _, _)
19: (function, main, _, _)
20: (param list, 0, _, _)
21: (call, input, 0, T6)
22: (assign, x, T6, _)
23: (param list, 0, _, _)
24: (call, input, 0, T7)
25: (assign, y, T7, _)
26: (param list, 1, _, _)
27: (param list, 2, _, _)
28: (set param, x, _, _)
29: (set param, y, _, _)
30: (call, gcd, 2, T8)
31: (set param, T8, _, _)
32: (call, output, 1, T9)

////////////Codigo Objeto////////////

gcd:
    0:	addi	$sp, $sp, 4
        1:	sw	$a0, -1($sp)
        2:	sw	$a1, 0($sp)
        3:	lw	$s0, 0($sp)
        4:	li	$t0, 0
        5:	eq	$t1, $s0, $t0
        6:	beq	$t1, $rzero, L1
        7:	lw	$s1, -1($sp)
        8:	mov	$v0, $s1
        9:	jr	$ra
        10:	j	L2
    .L1	
    11:	lw	$s0, 0($sp)
        12:	mov	$a0, $s0
        13:	lw	$s1, -1($sp)
        14:	div	$t2, $s1, $s0
        15:	mult	$t3, $t2, $s0
        16:	sub	$t4, $s1, $t3
        17:	mov	$a1, $t4
        18:	sw	$ra, -2($sp)
        19:	jal	gcd
        20:	subi	$sp, $sp, 4
        21:	lw	$ra, -2($sp)
        22:	mov	$s0, $v0
        23:	mov	$v0, $s0
        24:	jr	$ra
    .L2	
    25:	jr	$ra
    
main:
    26:	addi	$sp, $sp, 3
        27:	nop	
        28:	sysin	
        29:	nop	
        30:	lw	$t0, $t0
        31:	sw	$t0, -1($sp)
        32:	nop	
        33:	sysin	
        34:	nop	
        35:	lw	$t1, $t1
        36:	sw	$t1, 0($sp)
        37:	lw	$s0, -1($sp)
        38:	mov	$a0, $s0
        39:	lw	$s1, 0($sp)
        40:	mov	$a1, $s1
        41:	sw	$ra, -2($sp)
        42:	jal	gcd
        43:	subi	$sp, $sp, 4
        44:	lw	$ra, -2($sp)
        45:	mov	$s0, $v0
        46:	mov	$a0, $s0
        47:	nop	
        48:	sysout	
        49:	nop	
        50:	subi	$sp, $sp, 3
        51:	sysend	
    