% Modificacoes processador
    - modulo mantedor de processos
    - banco de 64 posicoes
        * 32 para SO, 32 para processo
        * fazer maquina de estados que muda o sinal de shift do banco
            chshft = 00 -> rshift = 0 && wshift = 0 -> os regsitradores pertencem ao SO
            chshft = 01 -> rshift = 0 && wshift = 1 -> os registradores vao do SO para o processo
            chshft = 11 -> rshift = 1 && wshift = 0 -> os registradores vao do processo para o SO
            chshft = 11 -> rshift = 1 && wshift = 1 -> os regsitradores pertencem ao processo
    - pc com biparticao
    - controlador de interrupcao

% Modifcacoes compilador
    - criar modo de SO e processo 
    - criar novas funcoes de sistema extras



--------------------------------------------
- adcionar instrucao de chwrt - no compilador
- adcionar instrucao de chwrt - no processador
- adcionar instrucao de chrd - no compilador
- adcionar instrucao de chrd - no processador

--------------------------------------------
fucoes de sistema: (nada do foi feito aqui alterou no processador)
    -set_proc_pc
    -swap_process -> guardar o numero do processo que foi trocado
    -(DONE) recover_OS -> sem tratamento extra no processador
    -(1/2 DONE) get_interruption -> move o que esta no registrador de interrupcao para o de retorno
    -(1/2 DONE) get_proc_pc
        *getpc
        *mov $v1(?) -> (???)
    -move_reg_OS_proc
    -move_reg_proc_OS
    -load_reg_context
    -store_reg_context


$v1 guarda o valor da interrupcao e do retorno, serio mesmo?